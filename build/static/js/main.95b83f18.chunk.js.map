{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","inputText","setInputText","todos","setTodos","setStatus","value","onChange","e","console","log","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","key","map","item","filter","element","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","filterHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95b83f18.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Form = ({ inputText, setInputText, todos, setTodos, setStatus }) => {\r\n\r\n    const inputTextHandler = (e) => {\r\n        console.log(e.target.value)\r\n        setInputText(e.target.value)\r\n    }\r\n\r\n    const submitTodoHandler = (e) => {\r\n        e.preventDefault()\r\n        setTodos([\r\n            ...todos, { text: inputText, completed: false, id: Math.random() * 1000}\r\n        ])\r\n        setInputText('')\r\n    }\r\n\r\n    const statusHandler = (e) => {\r\n      setStatus(e.target.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <form>\r\n        <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\r\n        <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n          <i className=\"fas fa-plus-square\"></i>\r\n        </button>\r\n        <div className=\"select\">\r\n          <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n            <option value=\"all\">All</option>\r\n            <option value=\"completed\">Completed</option>\r\n            <option value=\"uncompleted\">Uncompleted</option>\r\n          </select>\r\n        </div>\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import React from 'react'\r\n\r\nfunction Todo({ text, todo, key, todos, setTodos }) {\r\n\r\n    const deleteHandler = () => {\r\n        setTodos(todos.filter((element) => element.id !== todo.id))\r\n    }\r\n\r\n    const completeHandler = () => {\r\n        setTodos(todos.map((item) => {\r\n            if (item.id === todo.id) {\r\n                return {\r\n                    ...item, completed : !item.completed\r\n                }\r\n            }\r\n            return item\r\n        }))\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"todo\">\r\n            <li className={`todo-item ${todo.completed ? \"completed\" : \"\"} `}>\r\n                {text}\r\n            </li>\r\n            <button onClick={completeHandler} className=\"complete-btn\">\r\n                <i className=\"fas fa-check\"></i>\r\n            </button>\r\n            <button onClick={deleteHandler} className=\"trash-btn\">\r\n                <i className=\"fas fa-trash\"></i>\r\n            </button> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import React from 'react'\r\nimport Todo from './Todo'\r\n\r\nfunction TodoList({ todos, setTodos, filteredTodos }) {\r\n    return (\r\n        <div className=\"todo-container\">\r\n            <ul className=\"todo-list\">\r\n            {filteredTodos.map((todo) => (\r\n                <Todo \r\n                text={todo.text} \r\n                key={todo.id}\r\n                todo={todo} \r\n                todos={todos}\r\n                setTodos={setTodos}\r\n                /> \r\n            ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","import React, { useState, useEffect } from 'react'\nimport './App.css';\nimport Form from './components/Form'\nimport TodoList from './components/TodoList'\n\n\nfunction App() {\n  const [inputText, setInputText] = useState('')\n  const [todos, setTodos] = useState([])\n  const [status, setStatus] = useState('all')\n  const [filteredTodos, setFilteredTodos] = useState([])\n\n\n  // This will run only once in the beginning\n  // useEffect(() => {\n  //   getLocalTodos()\n  // }, [])\n\n  useEffect(() => {\n    filterHandler()\n    // saveLocalTodos()\n  }, [todos, status])\n\n \n  const filterHandler = () => {\n    switch(status) {\n      case 'completed':\n        setFilteredTodos(todos.filter((todo) => todo.completed === true))\n        break\n      case 'uncompleted':\n        setFilteredTodos(todos.filter((todo) => todo.completed === false))\n        break\n      default:\n        setFilteredTodos(todos)\n        break\n    }\n  }\n\n  // const saveLocalTodos = () => {\n  //     localStorage.setItem('todos', JSON.stringify(todos))\n  // }\n\n  // const getLocalTodos = () => {\n  //   if (localStorage.getItem('todos') === null) {\n  //     localStorage.setItem('todos', JSON.stringify([]))\n  //   }\n  //   else {\n  //     let todoLocal = JSON.parse(localStorage.getItem('todos'))\n  //     setTodos(todoLocal)\n  //   }\n  // }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Todo List</h1>\n      </header>\n      <Form \n        inputText={inputText} \n        setInputText={setInputText}\n        todos={todos}\n        setTodos={setTodos}\n        setStatus={setStatus}\n        />\n      <TodoList todos={todos} setTodos={setTodos} filteredTodos={filteredTodos} /> \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}